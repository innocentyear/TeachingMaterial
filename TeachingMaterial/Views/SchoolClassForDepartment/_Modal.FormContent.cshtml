@model TeachingMaterial.Models.SchoolClassViewModel

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SchoolClassID)

        

          <div class="form-group">
            <label for="GradeID" class="control-label col-md-2">年级</label>
            <div class="col-md-10">
                @Html.DropDownList("GradeID", Model.GradesList, htmlAttributes: new { @class = "form-control",id ="modalGrade" })
            </div>
        </div>
         
          <div class="form-group">
              <label for="DepartmentID" class="control-label col-md-2">部门</label>
              <div class="col-md-10">
                  @Html.DropDownList("DepartmentID", Model.DepartmentList, "全部", htmlAttributes: new { @class = "form-control", id = "modalDepartment" })
              </div>
             
          </div>

        <div class="form-group">
            <label for="MajorID" class="control-label col-md-2">专业</label>
            <div class="col-md-10">
              @Html.DropDownList("MajorID", Model.MajorsList, htmlAttributes: new { @class = "form-control", id = "modalMajor" })
            </div>
        </div>
       <span class="help-block">班级名称和人数，要与信息平台一致</span>
         <table id="schoolClassTable" class="table table-bordered">
             <tr>
                 <th>@Html.LabelFor(model => model.SchoolClassName, htmlAttributes: new { @class = "control-label" })</th>
                 <th>@Html.LabelFor(model => model.StudentNumber, htmlAttributes: new { @class = "control-label" })</th>
             </tr>
              <tr>
                  <td>
                      @Html.EditorFor(model => model.SchoolClassName, new { htmlAttributes = new { @class = "form-control" } })
                  </td>
                  <td>
                      @Html.EditorFor(model => model.StudentNumber, new { htmlAttributes = new { @class = "form-control" } })
                  </td>
              </tr> 
             
            
         </table>
          <br />
          <div class="btn-group">
              <a href="#" class="btn btn-success" id="addtr">增加一行班级</a> @* 改成链接形式的标签 点击 增加 就不再自动提交了。*@
              <a href="#" class="btn btn-warning" id="deltr">删除最后一行班级</a>
          </div>
        
         



        

@Scripts.Render("~/bundles/jqueryval")  @*将非侵入式验证文件加在表单的分部视图中，既可以加提交的Post表单中添加验证，又避免了Index视图的get 查询方法中，表单int类型外键提交验证的错误。*@
<script>
    $(function () {
        $("#addtr").click(function () {
            $tr = $("<tr class='schoolClass'></tr>");
            $("<td><input type='text' name='SchoolClassName'value='@Model.SchoolClassName' class='form-control' /></td>").appendTo($tr);
            $("<td><input type='text' name='StudentNumber' value='@Model.StudentNumber' class='form-control' /></td>").appendTo($tr);
            $("#schoolClassTable").append($tr);
            @*
            $tr = $("<tr></tr >");
            var s =$tr.append($("#schoolClass-info").html());
            $("#schoolClassTable").append(s);
                *@
        });

        $("#deltr").click(function () {
            $("#schoolClassTable tr:last").remove();
        });

        $("#modalDepartment").change(function () {
            var selectedGradeId = $("#modalGrade").val();
            var selectedDepartmentId = $("#modalDepartment").val();
            $.getJSON('@Url.Action("GetModalMajorList")', { gradeID: selectedGradeId,departmentID: selectedDepartmentId }).success(function (data) {
                        $("#modalMajor").empty();
                        $("#modalMajor").append("<option value=''>全部</option>");
                        $.each(data, function (i, p) {
                            $("#modalMajor").append("<option value='" + p.majorID + "' >" + p.majorName + "</option>");
                        });
                    });

            });
    });



</script>