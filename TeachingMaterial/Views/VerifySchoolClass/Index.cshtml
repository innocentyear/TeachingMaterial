@model  PagedList.IPagedList<TeachingMaterial.Models.SchoolClass>
@using PagedList.Mvc;
@{
    ViewBag.Title = "班级及人数核对";
}
@{
    string subscriptionState = ViewBag.SubscriptionState == false ? "disabled" : null;
}
<h2>@ViewBag.Title</h2>
<div class="alert alert-danger alert-dismissable">
    <button type="button" class="close" data-dismiss="alert"
            aria-hidden="true">
        &times;
    </button>
    各班级人数将自动汇总将生成年级专业人数，将决定各门学期课程的教材征订数量和班订单人数。如认为数量不准确，请到质量科核实，更改系统里各班的人数或开通修改权限。
</div>
@using (Html.BeginForm("Index", "VerifySchoolClass", FormMethod.Get, new { @class = "form-inline", role = "form" }))
{
    <label for="pageSize" class="control-label">每页指定记录数：</label>
    <div class="form-group">
        <input type="number" name="pageSize" value="@ViewBag.pageSize" class="form-control" size="1" maxlength="4" min="1" max="1000" /> @* 使用新的Html5标签 <input type="number">*@
        @* @Html.TextBox("pageSize", ViewBag.pageSize as string, htmlAttributes: new { @class = "form-control", size = "1", maxlength = "2" })*@
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="gradeID" class="control-label">年级：</label>
    <div class="form-group">
        @Html.DropDownList("gradeID", ViewBag.gradeSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="departmentID" class="control-label">部门：</label>
    <div class="form-group">
        @Html.DropDownList("departmentID", ViewBag.departmentSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control", id = "indexDepartment" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="majorID" class="control-label">专业：</label>
    <div class="form-group">
        @Html.DropDownList("majorID", ViewBag.majorSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control", id = "indexMajor" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <input type="submit" value="确定" class="btn btn-primary" />
}
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("年级", "Index", new { sortOrder = ViewBag.GradeIDSortParam, gradeID = ViewBag.gradeID, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, pageSize = ViewBag.pageSize })
            </th>
            <th>
                @Html.ActionLink("部门名称", "Index", new { sortOrder = ViewBag.DeparmentIDSortParam, gradeID = ViewBag.gradeID, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, pageSize = ViewBag.pageSize })
            </th>
            <th>
                @Html.ActionLink("专业名称", "Index", new { sortOrder = ViewBag.MajorIDSortParam, gradeID = ViewBag.gradeID, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, pageSize = ViewBag.pageSize })
            </th>
            <th>
                班级名称
            <th>
                学生人数
            </th>
        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.GradeMajor.Grade.GradeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GradeMajor.Major.Department.DepartmentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GradeMajor.Major.MajorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SchoolClassName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.StudentNumber)
                </td>
               
            </tr>
        }
    </tbody>

    <tfoot>
        <tr>
            <td class="text-muted" colspan="12">
                每页 @Model.PageSize 条记录，共有 @Model.TotalItemCount 条记录。第 @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 页，共 @Model.PageCount 页。
            </td>
        </tr>
    </tfoot>

</table>


@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, gradeID = ViewBag.gradeID, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, pageSize = ViewBag.pageSize }),
                               new PagedListRenderOptions { LinkToFirstPageFormat = "首页", LinkToNextPageFormat = "下一页", LinkToPreviousPageFormat = "上一页", LinkToLastPageFormat = "末页", MaximumPageNumbersToDisplay = 5, DisplayItemSliceAndTotal = false }
)

@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@  @*将非侵入式验证文件加在表单的分部视图中，既可以加提交的Post表单中添加验证，又避免了Index视图的get 查询方法中，表单int类型外键提交验证的错误。*@
    <script>
        $(function () {
            //由于Get形式的查询表单IPagedList<>的模型也引用的是 领域模型而筛选ID为整型，不可以空，因此，表单提交的时候执行非侵入式验证会，传递为“全部”的筛选值，id会为空，默认阻止提交。
            //虽然执行这段代码会取消表单对 ID空值的验证，表单能正确提交，但是chorome会报错。
           @* $("form").removeData("validator").removeData("unobtrusiveValidation"); *@

            $("#indexDepartment").change(function () {
                  var selectedDepartmentId = $("#indexDepartment").val();
                    $.getJSON('@Url.Action("GetMajorList")', { departmentID: selectedDepartmentId }).success(function (data) {
                        $("#indexMajor").empty();
                        $("#indexMajor").append("<option value=''>全部</option>");
                        $.each(data, function (i, p) {
                            $("#indexMajor").append("<option value='" + p.majorID + "' >" + p.majorName + "</option>");
                        });
                    });

            });


        });

    </script>


}