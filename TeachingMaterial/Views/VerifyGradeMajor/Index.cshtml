@model PagedList.IPagedList<TeachingMaterial.Models.GradeMajor>
@using PagedList.Mvc;
@{
    ViewBag.Title = "年级专业人数核对";
}

<h2>@ViewBag.Title</h2>
<div class="alert alert-danger alert-dismissable">
    <button type="button" class="close" data-dismiss="alert"
            aria-hidden="true">
        &times;
    </button>
    各年级专业学生人数由系统里面各班人数自动生成，将决定各门学期课程的教材征订数量。如认为数量不准确，请到质量科核实，更改系统里各班的人数或开通修改权限。
</div>

@using (Html.BeginForm("Index", "VerifyGradeMajor", FormMethod.Get, new { @class = "form-inline", role = "form" }))
{
    <label for="pageSize" class="control-label">每页指定记录数：</label>
    <div class="form-group">
        <input type="number" name="pageSize" value="@ViewBag.pageSize" class="form-control" size="1" maxlength="4" min="1" max="1000" /> @* 使用新的Html5标签 <input type="number">*@
        @* @Html.TextBox("pageSize", ViewBag.pageSize as string, htmlAttributes: new { @class = "form-control", size = "1", maxlength = "2" })*@
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="departmentID" class="control-label">部门：</label>
    <div class="form-group">
        @Html.DropDownList("departmentID", ViewBag.departmentSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control", id = "indexDepartment" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="majorID" class="control-label">专业：</label>
    <div class="form-group">
        @Html.DropDownList("majorID", ViewBag.majorSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control", id = "indexMajor" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="gradeID" class="control-label">年级：</label>
    <div class="form-group">
        @Html.DropDownList("gradeID", ViewBag.gradeSelectList as SelectList, "全部", htmlAttributes: new { @class = "form-control" })
    </div>
    <text>&nbsp;&nbsp;</text>
    <label for="majorName" class="control-label">专业名称：</label>
    <div class="form-group">
        @Html.TextBox("majorName", ViewBag.majorName as string, htmlAttributes: new { @class = "form-control", placeholder = "请输入专业名称" })
    </div>
    <text>&nbsp;</text>
    <input type="submit" value="确定" class="btn btn-primary" />
}
<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>
                部门名称
            </th>
            <th>
                @Html.ActionLink("专业名称", "Index", new { sortOrder = ViewBag.MajorIDSortParam, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, gradeID = ViewBag.gradeID, majorName = ViewBag.majorName, pageSize = ViewBag.pageSize })
            </th>
            <th>
                @Html.ActionLink("年级名称", "Index", new { sortOrder = ViewBag.GradeIDSortParam, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, gradeID = ViewBag.gradeID, majorName = ViewBag.majorName, pageSize = ViewBag.pageSize })
            </th>
            <th>
                学生人数
            </th>
            <th></th>
        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Major.Department.DepartmentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Major.MajorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade.GradeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GradeMajorStudentNumber)
                </td>
            </tr>
        }

    </tbody>

    <tfoot>
        <tr>
            <td class="text-muted" colspan="12">
                每页 @Model.PageSize 条记录，共有 @Model.TotalItemCount 条记录。第 @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 页，共 @Model.PageCount 页。
            </td>
        </tr>
    </tfoot>

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, departmentID = ViewBag.departmentID, majorID = ViewBag.MajorID, gradeID = ViewBag.gradeID, majorName = ViewBag.majorName, pageSize = ViewBag.pageSize }),
                               new PagedListRenderOptions { LinkToFirstPageFormat = "首页", LinkToNextPageFormat = "下一页", LinkToPreviousPageFormat = "上一页", LinkToLastPageFormat = "末页", MaximumPageNumbersToDisplay = 5, DisplayItemSliceAndTotal = false }
)

@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@ @*不加载非侵入式验证文件，get形式的表单不需要验证，有验证还出 错。*@
    <script>
        $(function () {
            @*本页面移除验证，不加这一行，表单是无法提交的，因为id值在模型里面是设置成int类型，自动执行非侵入式验证。*@
            @* $("form").removeData("validator").removeData("unobtrusiveValidation");*@
            //将父元素加载一个事件， 单击它的子元素后就执行。jquery中绑定事件的方法有bind,delegate等多种，但on方法是最新的，最好的。

            $("#indexDepartment").change(function () {
                var selectedDepartmentId = $("#indexDepartment").val();
                $.getJSON('@Url.Action("GetMajorList")', { departmentID: selectedDepartmentId }).success(function (data) {
                    $("#indexMajor").empty();
                    $("#indexMajor").append("<option value=''>全部</option>");
                    $.each(data, function (i, p) {
                        $("#indexMajor").append("<option value='" + p.majorID + "' >" + p.majorName + "</option>");
                    });
                });

            });
        });


    </script>


}
